@using Bump.Auth
@using Bump.Components
@using Common
@using Microsoft.AspNetCore.Identity
@model Bump.VM.ThemeVm
@inject IViewLocalizer Localizer
@inject UserManager< BumpUser > UserManager

@{
    ViewData [ "Title" ] = Model.Title;
}

@section Scripts
{
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script>
    const connection = new signalR.HubConnectionBuilder().withUrl(
            "/theme?t_id=" + @Model.Id
        ).build();
        
        connection.on("Created" , function(messageId) {
          $.ajax({
                url: window.location.origin + "/Components/Message?messageId="+messageId,
                type: "post",
                complete: function (result) {
                    console.log(result.responseText);
                     $("#messages").prepend(result.responseText + "<hr/>");            
                }
          });
        })
    
        connection.start().then(function () {
            console.log("Started");
        }).catch(function (err) {
            return console.error(err.toString());
        });
    </script>
}

<div class="bump-container-m">
    <div class="row">
        <centered-vertical>
            <h3>@Model.Title</h3>
        </centered-vertical>
        <centered-vertical style="margin-left: auto">
            <form asp-controller="Theme" asp-action="EditTheme" method="get">
                <button
                    class="btn btn-outline-primary"
                    type="submit"
                    name="themeId"
                    value="@Model.Id">
                    @Strings[ "Edit" ]
                </button>
            </form>
        </centered-vertical>
    </div>

</div>
<hr/>
<div class="bump-container-m">
    <div>
        <p>@Model.Content</p>
    </div>
    <div class="row">
        @foreach( var media in Model.Media ) {
            <input type="hidden" name="Media" value="@media">
            <div class="image-column">
                <div style="height: 100%; width: auto; border: 1px #ccc;">
                    @await Component.InvokeAsync( typeof( Media ) , new {id = media} )
                </div>
            </div>
        }
    </div>
    <div class="row">
        <div>
            @Localizer[ "Participants" ] @Model.Messages.Select( it => it.Author.Id ).Distinct().Count()
        </div>
        <div style="width: max-content; margin-left: auto">
            @Model.StartTime.Format( Localizer [ "Started" ].Value )
        </div>
    </div>
</div>
<hr/>
<div class="bump-container-m row">
    <h4>@Localizer[ "Discussion" ]</h4>
    <form
        style="margin-left: auto; margin-right: 10px"
        method="get"
        asp-controller="Message"
        asp-action="CreateMessage">
        <input type="hidden" name="themeId" value="@Model.Id">
        <button
            class="btn" style="
            background: #1b6ec2; 
            border-radius: 16px;
            height: 32px;
            width: 32px;
            color: white;
            padding: 0;
            font-weight: bolder;"
            type="submit">
            +
        </button>
    </form>
</div>
<hr/>
@if( Model.Messages.Count > 0 ) {
    <div id="messages">
        @foreach( var message in Model.Messages.SkipLast( 1 ) ) {
            @await Component.InvokeAsync( typeof( Message ) , new {message} )
            <hr/>
        }
        @await Component.InvokeAsync( typeof( Message ) , new {message = Model.Messages.Last()} )
    </div>
}
else {
    <div class="bump-container-m">
        <p>No messages yet</p>
    </div>
}